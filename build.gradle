plugins {
    id 'java'
    id 'com.gradleup.shadow' version '8.3.3'
    id 'org.jetbrains.kotlin.jvm' version '2.0.21'
}

group = 'com.al3x'
version = '1.0'

repositories {
    mavenCentral()
    maven { url 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/' }
    maven { url 'https://repo.inventivetalent.org/repository/public/' }
    maven { url 'https://oss.sonatype.org/content/groups/public/' }
    maven { url 'https://repo.onarandombox.com/content/groups/public/' }
    maven { url 'https://maven.citizensnpcs.co/repo' }
    maven { url 'https://repo.infernalsuite.com/repository/maven-snapshots/' }
    maven { url 'https://repo.rapture.pw/repository/maven-releases/' }
    maven { url "https://repo.dmulloy2.net/repository/public/" }
    maven {
        name = "papermc"
        url = uri("https://repo.papermc.io/repository/maven-public/")
    }
    maven { url = 'https://repo.extendedclip.com/releases/' }
    maven { url "https://repo.fancyplugins.de/releases" }
}

dependencies {
    compileOnly("io.papermc.paper:paper-api:1.21.1-R0.1-SNAPSHOT")
    compileOnly('net.citizensnpcs:citizens-main:2.0.35-SNAPSHOT') {
        transitive = false
    }
    implementation "com.google.code.gson:gson:2.11.0"
    compileOnly 'com.infernalsuite.aswm:api:3.0.0-SNAPSHOT'
    implementation 'com.infernalsuite.aswm:loaders:3.0.0-SNAPSHOT'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation 'fr.mrmicky:fastboard:2.1.3'
    implementation files('libs/PacketWrapper.jar')
    compileOnly 'com.comphenix.protocol:ProtocolLib:5.1.0'
    compileOnly 'me.clip:placeholderapi:2.11.6'
    compileOnly "de.oliver:FancyNpcs:2.4.1"
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

String outputLocation = 'build/libs'
//You can put this in your local gradle.properties file
if (project.hasProperty('outputLocation')) {
    outputLocation = project.outputLocation
}

tasks.register('copyJarToLocation', Copy) {
    from shadowJar
    into outputLocation
}

kotlin {
    jvmToolchain(21)
}

java {
    toolchain.languageVersion.set(JavaLanguageVersion.of(21))
}